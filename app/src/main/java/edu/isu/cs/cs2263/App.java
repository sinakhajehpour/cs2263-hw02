/*
 * This Java source file was generated by the Gradle 'init' task.
 */
/* Sina Khajehpour
CS 2263
Prof. Griffith
Description: App.java creates a javafx format that get students' names and last names and by clicking on their name, the list of their courses will show up on
the courselist box.
 */
package edu.isu.cs.cs2263;


import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.*;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.control.Label;
import javafx.stage.Stage;
import java.io.IOException;
import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

public class App extends Application {
    //make stag for javafx
    public void start(Stage stage) {
        Button loadData = new Button();
        loadData.setText("Load Data");
        loadData.setTranslateX(135);
        loadData.setTranslateY(30);

        //make a course clear button
        Button clearCourseList=new Button();
        clearCourseList.setText("Clear Course List");
        clearCourseList.setTranslateX(135);
        clearCourseList.setTranslateY(30);

        //Label for students, courses and istaking
        Label students = new Label("Students");
        Label courses = new Label("Courses");
        Label isTaking = new Label("is taking");

        //list View for educational qualification
        ObservableList<String> student = FXCollections.observableArrayList();
        ListView<String> listViewStudents = new ListView<String>(student);
        listViewStudents.setMaxSize(200, 160);

        //make a course and student list view
        ObservableList<String> course = FXCollections.observableArrayList();
        ListView<String> listViewCourses = new ListView<String>(course);
        listViewCourses.setMaxSize(200, 160);
        isTaking.setTranslateX(100);
        isTaking.setTranslateY(100);

        //Creating the layout
        HBox layout = new HBox();
        VBox layoutStudents = new VBox();
        VBox layoutCourses = new VBox();

        //adding layouts to the stage
        layoutStudents.setPadding(new Insets(5, 5, 5, 5));
        layoutCourses.setPadding(new Insets(5, 5, 5, 200));
        layoutStudents.getChildren().addAll(students, listViewStudents);
        layoutCourses.getChildren().addAll(courses, listViewCourses, loadData,clearCourseList);
        layout.getChildren().addAll(layoutStudents, isTaking, layoutCourses);

        //event handler for adding students' names to the student's list
        //put your json file here
        loadData.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                String file = "C:\\CS2263\\hw02\\cs2263-hw02\\app\\src\\main\\java\\edu\\isu\\cs\\cs2263\\File";
                try {
                    Reader reader = Files.newBufferedReader(Paths.get(file));
                    List<Student> students = new Gson().fromJson(reader, new TypeToken<List<Student>>() {
                    }.getType());
                    String firstName;
                    String lastName;
                    List courseList;
                    for (int i = 0; i < students.size(); i++) {
                        firstName = students.get(i).getFirstName();
                        lastName = students.get(i).getLastName();
                        courseList = students.get(i).getCourseList();
                        student.add(firstName + "  " + lastName);
                        if (listViewStudents.getSelectionModel().getSelectedIndex() == 0) {
                            System.out.println("index 0");
                            course.add(courseList.toString());
                        }
                        reader.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        //adding course list by pushing the load data button

        // put your json file here

        listViewStudents.setOnMouseClicked(new EventHandler<MouseEvent>() {
            @Override
            public void handle(MouseEvent event) {
                String file = "C:\\CS2263\\hw02\\cs2263-hw02\\app\\src\\main\\java\\edu\\isu\\cs\\cs2263\\File";
                try {
                    Reader reader = Files.newBufferedReader(Paths.get(file));
                    List<Student> students = new Gson().fromJson(reader, new TypeToken<List<Student>>() {
                    }.getType());
                    String firstName;
                    String lastName;
                    List courseList;
                    for (int i = 0; i < students.size(); i++) {
                        courseList=students.get(i).getCourseList();
                        if (listViewStudents.getSelectionModel().getSelectedIndex()==i) {
                            for (int j=0; j<courseList.size();j++){
                            course.add(courseList.get(j).toString());
                            }
                        }
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        //clear the course list and make it ready for the next student
        clearCourseList.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                course.clear();
            }
        });


        //Setting the stage
        Scene scene = new Scene(layout, 700, 300);
        stage.setTitle("Course View");
        stage.setScene(scene);
        stage.show();


        }

    public static void main(String[] args) {
        launch(args);
    }
    }




